"use strict";(self.webpackChunk_gemeente_denhaag_storybook=self.webpackChunk_gemeente_denhaag_storybook||[]).push([[3357],{"../../node_modules/.pnpm/@storybook+addon-actions@7.6.19/node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var v4=__webpack_require__("../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),preview_errors=__webpack_require__("../../node_modules/.pnpm/@storybook+core-events@7.6.19/node_modules/@storybook/core-events/dist/errors/preview-errors.mjs"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new preview_errors._U({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler}},"./src/react/List.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Listitem:()=>Listitem,Subheader:()=>Subheader,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@7.6.19/node_modules/@storybook/addon-actions/dist/index.mjs"),_gemeente_denhaag_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../components/Icons/dist/mjs/index.js"),_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../components/List/dist/mjs/index.js"),_components_List_README_md__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../components/List/README.md"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const exampleArgs={children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"ListItem"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"ListItem"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"ListItem"})]})},__WEBPACK_DEFAULT_EXPORT__={id:"react-data-display-list",title:"React/Data Display/List",component:_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.B8,args:exampleArgs,tags:["autodocs"],parameters:{docs:{description:{component:_components_List_README_md__WEBPACK_IMPORTED_MODULE_4__}}}},Default={},Subheader={args:{subheader:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.a6,{children:"Subheader"})}},Listitem={args:{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"ListItem"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"Single-line item",actionType:"action",leftIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_icons__WEBPACK_IMPORTED_MODULE_2__.HouseIcon,{color:"inherit"}),rightIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_icons__WEBPACK_IMPORTED_MODULE_2__.TrashIcon,{}),onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("Secondary action click")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_list__WEBPACK_IMPORTED_MODULE_3__.ck,{primaryText:"Single-line item",secondaryText:"Secondary text",leftIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_gemeente_denhaag_icons__WEBPACK_IMPORTED_MODULE_2__.HouseIcon,{color:"inherit"}),actionType:"nav",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("ListItem Nav click")})]})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},Subheader.parameters={...Subheader.parameters,docs:{...Subheader.parameters?.docs,source:{originalSource:"{\n  args: {\n    subheader: <ListSubheader>Subheader</ListSubheader>\n  }\n}",...Subheader.parameters?.docs?.source}}},Listitem.parameters={...Listitem.parameters,docs:{...Listitem.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n        <ListItem primaryText="ListItem" />\n        <ListItem primaryText="Single-line item" actionType="action" leftIcon={<HouseIcon color="inherit"></HouseIcon>} rightIcon={<TrashIcon />} onClick={action(\'Secondary action click\')} />\n        <ListItem primaryText="Single-line item" secondaryText="Secondary text" leftIcon={<HouseIcon color="inherit" />} actionType="nav" onClick={action(\'ListItem Nav click\')} />\n      </>\n  }\n}',...Listitem.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Subheader","Listitem"]},"../../components/List/README.md":module=>{module.exports="# List\n\nLists present multiple line items vertically as a single continuous element. The types of lists are one-line and two-line.\n\n## When to use\n\nLists are a continuous group of text or images. They are composed of items containing primary and supplemental actions, which are represented by icons and text. It can be used to show a list of messages or subjects.\n\n## Alternatives and related components\n\nUse cards if more than three lines of text need to be shown in list tiles.\n\n## Anatomy\n\nThe list consists of:\n\n1. Subheader: delineate sections of a list\n2. List item: the name of the list item\n3. Secondary text (optional): extra information about the list item\n4. Leading icon (optional): gives meaning to the list item\n5. Trailing icon (optional): represents a navigational element or an action an user can take\n6. Container: list item row\n7. List: contains all list items and the subheading\n\n## (Interactive) states\n\nThe checkbox contains the states active, inactive, hover and focus.\n\n## Design properties\n\n### Typography\n\n- Subheader: TheSans/md/700\n- List item: TheSans/md/400\n- Secondary text: TheSans/s/400\n\n### Color\n\n- Subheader: text color Grey/4\n- List item: text color Grey/4\n- Secondary text: text color Grey/4\n- Leading icon: svg color Grey/4\n- Trailing icon: svg color Grey/4\n- Container: background-color white\n\n### Interactive states\n\n- Active: list-item color Grey/4, container border 2px, container border color Blue/3\n- Hover: list item text color Blue/3, trailing icon svg color Blue/3\n- Focus: list item text color Blue/3, trailing icon svg color Blue/3, container border color Ocher/5\n\n### Structure\n\n- Subheader: padding-top and padding-bottom 12px, padding-left and padding-right 16px\n- List item: padding-top and padding-bottom 12px, padding-left and padding-right 16px\n- Secondary text: padding-bottom 8px, padding-left and padding-right 16px\n- Leading icon: height and width 24px, padding-top and padding-bottom 12px, padding-left 16px, padding-right 12px\n- Trailing icon: height and width 24px, padding-top and padding-bottom 12px, padding-right 16px\n- Container focus: container border 2px, dash 5,5\n- Container one line: height 48px\n- Container two lines: min-height 72px\n- List: padding-top and padding-bottom 8px\n\n## Accessibility\n\n[technical accessibility requirements]\n\n## Content guidelines\n\n### List items\n\nEvery item in a list should:\n\n- Start with a capital letter\n- Not use commas or semicolons at the end of each line\n- Be written in sentence case\n\n## Best practices\n\n### Dos\n\nLists should:\n\n- Have the most distinguishing content placed towards the left of the container\n- Be sorted or filtered by date, file size, alphabetical order, or other parameters\n- Avoid displaying a repeated supplemental action in containers, such as a share action in every container\n- Break up chunks of related content to make the information easier for users to scan\n- Be phrased consistently (try to start each item with a noun or a verb and be consistent with each item)\n- Not be used for lists where the entire item represents an action\n- Only use an icon if it adds clarity to the content or helps users visualize the meaning\n- Erase the entire row if the 'delete' action is used\n- Represent data structures in a scannable way and make them navigable\n- Stay consistent with the action\n\n### Don’ts\n\nLists should:\n\n- Not be used for displaying complex datasets. Consider using a table instead\n- Not use the supporting visual to show the state or meta information\n\n## References\n"}}]);